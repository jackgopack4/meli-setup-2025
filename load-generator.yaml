---
apiVersion: v1
kind: ConfigMap
metadata:
  name: load-generator-script
  namespace: default
data:
  load-test.sh: |
    #!/bin/bash
    
    SERVICE_URL="http://sample-app-service"
    
    echo "Starting load generation against $SERVICE_URL"
    
    while true; do
      # Generate random delays between requests (1-5 seconds)
      DELAY=$((RANDOM % 5 + 1))
      
      # Randomly choose an endpoint
      RAND_NUM=$((RANDOM % 3))
      case $RAND_NUM in
        0) ENDPOINT="/health" ;;
        1) ENDPOINT="/work" ;;
        2) ENDPOINT="/metrics" ;;
      esac
      
      echo "$(date): Making request to $SERVICE_URL$ENDPOINT"
      
      # Make the request and capture response
      RESPONSE=$(curl -s -w "\n%{http_code}" "$SERVICE_URL$ENDPOINT" 2>/dev/null)
      HTTP_CODE=$(echo "$RESPONSE" | tail -1)
      BODY=$(echo "$RESPONSE" | head -n -1)
      
      echo "Response code: $HTTP_CODE"
      
      if [ "$HTTP_CODE" != "200" ] && [ "$HTTP_CODE" != "500" ]; then
        echo "Unexpected response code: $HTTP_CODE"
        echo "Response body: $BODY"
      fi
      
      sleep $DELAY
    done

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: load-generator
  namespace: default
  labels:
    app: load-generator
spec:
  replicas: 2  # Multiple load generators for more traffic
  selector:
    matchLabels:
      app: load-generator
  template:
    metadata:
      labels:
        app: load-generator
    spec:
      containers:
      - name: load-generator
        image: curlimages/curl:latest
        command: ["/bin/sh"]
        args: ["/scripts/load-test.sh"]
        volumeMounts:
        - name: script-volume
          mountPath: /scripts
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      volumes:
      - name: script-volume
        configMap:
          name: load-generator-script
          defaultMode: 0755 